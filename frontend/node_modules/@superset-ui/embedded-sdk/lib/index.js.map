{"version":3,"file":"index.js","names":["_const","require","_switchboard","_guestTokenRefresh","embedDashboard","id","supersetDomain","mountPoint","fetchGuestToken","dashboardUiConfig","debug","iframeTitle","iframeSandboxExtras","referrerPolicy","log","info","console","endsWith","slice","calculateConfig","configNumber","hideTitle","hideTab","hideChartControls","emitDataMasks","mountIframe","Promise","resolve","iframe","document","createElement","dashboardConfigUrlParams","uiConfig","undefined","filterConfig","filters","filterConfigKeys","Object","keys","filterConfigUrlParams","fromEntries","map","key","DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY","urlParams","urlParamsString","length","URLSearchParams","toString","sandbox","add","forEach","addEventListener","commsChannel","MessageChannel","ourPort","port1","theirPort","port2","contentWindow","postMessage","type","IFRAME_COMMS_MESSAGE_TYPE","handshake","Switchboard","port","name","src","title","replaceChildren","guestToken","all","emit","refreshGuestToken","newGuestToken","setTimeout","getGuestTokenRefreshTiming","unmount","getScrollSize","get","getDashboardPermalink","anchor","getActiveTabs","getDataMask","observeDataMask","callbackFn","start","defineMethod","setThemeConfig","themeConfig","error"],"sources":["../src/index.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY,\n  IFRAME_COMMS_MESSAGE_TYPE,\n} from './const';\n\n// We can swap this out for the actual switchboard package once it gets published\nimport { Switchboard } from '@superset-ui/switchboard';\nimport { getGuestTokenRefreshTiming } from './guestTokenRefresh';\n\n/**\n * The function to fetch a guest token from your Host App's backend server.\n * The Host App backend must supply an API endpoint\n * which returns a guest token with appropriate resource access.\n */\nexport type GuestTokenFetchFn = () => Promise<string>;\n\nexport type UiConfigType = {\n  hideTitle?: boolean;\n  hideTab?: boolean;\n  hideChartControls?: boolean;\n  emitDataMasks?: boolean;\n  filters?: {\n    [key: string]: boolean | undefined;\n    visible?: boolean;\n    expanded?: boolean;\n  };\n  urlParams?: {\n    [key: string]: any;\n  };\n};\n\nexport type EmbedDashboardParams = {\n  /** The id provided by the embed configuration UI in Superset */\n  id: string;\n  /** The domain where Superset can be located, with protocol, such as: https://superset.example.com */\n  supersetDomain: string;\n  /** The html element within which to mount the iframe */\n  mountPoint: HTMLElement;\n  /** A function to fetch a guest token from the Host App's backend server */\n  fetchGuestToken: GuestTokenFetchFn;\n  /** The dashboard UI config: hideTitle, hideTab, hideChartControls, filters.visible, filters.expanded **/\n  dashboardUiConfig?: UiConfigType;\n  /** Are we in debug mode? */\n  debug?: boolean;\n  /** The iframe title attribute */\n  iframeTitle?: string;\n  /** additional iframe sandbox attributes ex (allow-top-navigation, allow-popups-to-escape-sandbox) **/\n  iframeSandboxExtras?: string[];\n  /** force a specific refererPolicy to be used in the iframe request **/\n  referrerPolicy?: ReferrerPolicy;\n};\n\nexport type Size = {\n  width: number;\n  height: number;\n};\n\nexport type ObserveDataMaskCallbackFn = (\n  dataMask: Record<string, any> & {\n    crossFiltersChanged: boolean;\n    nativeFiltersChanged: boolean;\n  },\n) => void;\nexport type EmbeddedDashboard = {\n  getScrollSize: () => Promise<Size>;\n  unmount: () => void;\n  getDashboardPermalink: (anchor: string) => Promise<string>;\n  getActiveTabs: () => Promise<string[]>;\n  observeDataMask: (\n    callbackFn: ObserveDataMaskCallbackFn,\n  ) => void;\n  getDataMask: () => Record<string, any>;\n  setThemeConfig: (themeConfig: Record<string, any>) => void;\n};\n\n/**\n * Embeds a Superset dashboard into the page using an iframe.\n */\nexport async function embedDashboard({\n  id,\n  supersetDomain,\n  mountPoint,\n  fetchGuestToken,\n  dashboardUiConfig,\n  debug = false,\n  iframeTitle = 'Embedded Dashboard',\n  iframeSandboxExtras = [],\n  referrerPolicy,\n}: EmbedDashboardParams): Promise<EmbeddedDashboard> {\n  function log(...info: unknown[]) {\n    if (debug) {\n      console.debug(`[superset-embedded-sdk][dashboard ${id}]`, ...info);\n    }\n  }\n\n  log('embedding');\n\n  if (supersetDomain.endsWith('/')) {\n    supersetDomain = supersetDomain.slice(0, -1);\n  }\n\n  function calculateConfig() {\n    let configNumber = 0;\n    if (dashboardUiConfig) {\n      if (dashboardUiConfig.hideTitle) {\n        configNumber += 1;\n      }\n      if (dashboardUiConfig.hideTab) {\n        configNumber += 2;\n      }\n      if (dashboardUiConfig.hideChartControls) {\n        configNumber += 8;\n      }\n      if (dashboardUiConfig.emitDataMasks) {\n        configNumber += 16;\n      }\n    }\n    return configNumber;\n  }\n\n  async function mountIframe(): Promise<Switchboard> {\n    return new Promise(resolve => {\n      const iframe = document.createElement('iframe');\n      const dashboardConfigUrlParams = dashboardUiConfig\n        ? { uiConfig: `${calculateConfig()}` }\n        : undefined;\n      const filterConfig = dashboardUiConfig?.filters || {};\n      const filterConfigKeys = Object.keys(filterConfig);\n      const filterConfigUrlParams = Object.fromEntries(\n        filterConfigKeys.map(key => [\n          DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY[key],\n          filterConfig[key],\n        ]),\n      );\n\n      // Allow url query parameters from dashboardUiConfig.urlParams to override the ones from filterConfig\n      const urlParams = {\n        ...dashboardConfigUrlParams,\n        ...filterConfigUrlParams,\n        ...dashboardUiConfig?.urlParams,\n      };\n      const urlParamsString = Object.keys(urlParams).length\n        ? '?' + new URLSearchParams(urlParams).toString()\n        : '';\n\n      // set up the iframe's sandbox configuration\n      iframe.sandbox.add('allow-same-origin'); // needed for postMessage to work\n      iframe.sandbox.add('allow-scripts'); // obviously the iframe needs scripts\n      iframe.sandbox.add('allow-presentation'); // for fullscreen charts\n      iframe.sandbox.add('allow-downloads'); // for downloading charts as image\n      iframe.sandbox.add('allow-forms'); // for forms to submit\n      iframe.sandbox.add('allow-popups'); // for exporting charts as csv\n      // additional sandbox props\n      iframeSandboxExtras.forEach((key: string) => {\n        iframe.sandbox.add(key);\n      });\n      // force a specific refererPolicy to be used in the iframe request\n      if (referrerPolicy) {\n        iframe.referrerPolicy = referrerPolicy;\n      }\n\n      // add the event listener before setting src, to be 100% sure that we capture the load event\n      iframe.addEventListener('load', () => {\n        // MessageChannel allows us to send and receive messages smoothly between our window and the iframe\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API\n        const commsChannel = new MessageChannel();\n        const ourPort = commsChannel.port1;\n        const theirPort = commsChannel.port2;\n\n        // Send one of the message channel ports to the iframe to initialize embedded comms\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        // we know the content window isn't null because we are in the load event handler.\n        iframe.contentWindow!.postMessage(\n          { type: IFRAME_COMMS_MESSAGE_TYPE, handshake: 'port transfer' },\n          supersetDomain,\n          [theirPort],\n        );\n        log('sent message channel to the iframe');\n\n        // return our port from the promise\n        resolve(\n          new Switchboard({\n            port: ourPort,\n            name: 'superset-embedded-sdk',\n            debug,\n          }),\n        );\n      });\n      iframe.src = `${supersetDomain}/embedded/${id}${urlParamsString}`;\n      iframe.title = iframeTitle;\n      //@ts-ignore\n      mountPoint.replaceChildren(iframe);\n      log('placed the iframe');\n    });\n  }\n\n  const [guestToken, ourPort]: [string, Switchboard] = await Promise.all([\n    fetchGuestToken(),\n    mountIframe(),\n  ]);\n\n  ourPort.emit('guestToken', { guestToken });\n  log('sent guest token');\n\n  async function refreshGuestToken() {\n    const newGuestToken = await fetchGuestToken();\n    ourPort.emit('guestToken', { guestToken: newGuestToken });\n    setTimeout(refreshGuestToken, getGuestTokenRefreshTiming(newGuestToken));\n  }\n\n  setTimeout(refreshGuestToken, getGuestTokenRefreshTiming(guestToken));\n\n  function unmount() {\n    log('unmounting');\n    //@ts-ignore\n    mountPoint.replaceChildren();\n  }\n\n  const getScrollSize = () => ourPort.get<Size>('getScrollSize');\n  const getDashboardPermalink = (anchor: string) =>\n    ourPort.get<string>('getDashboardPermalink', { anchor });\n  const getActiveTabs = () => ourPort.get<string[]>('getActiveTabs');\n  const getDataMask = () => ourPort.get<Record<string, any>>('getDataMask');\n  const observeDataMask = (\n    callbackFn: ObserveDataMaskCallbackFn,\n  ) => {\n    ourPort.start();\n    ourPort.defineMethod('observeDataMask', callbackFn);\n  };\n  // TODO: Add proper types once theming branch is merged\n  const setThemeConfig = async (themeConfig: Record<string, any>): Promise<void> => {\n    try {\n      ourPort.emit('setThemeConfig', { themeConfig });\n      log('Theme config sent successfully (or at least message dispatched)');\n    } catch (error) {\n      log(\n        'Error sending theme config. Ensure the iframe side implements the \"setThemeConfig\" method.',\n      );\n      throw error;\n    }\n  };\n\n  return {\n    getScrollSize,\n    unmount,\n    getDashboardPermalink,\n    getActiveTabs,\n    observeDataMask,\n    getDataMask,\n    setThemeConfig\n  };\n}\n"],"mappings":"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","ignoreList":[]}